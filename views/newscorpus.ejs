<!DOCTYPE html>
<html>
<head><% include commons/head.ejs %></head>

<body>

	<header><% include commons/header.ejs %></header>

	<!-- news article content -->
	<div class="rounded right-sidebox" id="divArticle" style="z-index: 9">
		<div class="text-right" id="close_content" style="display: none">
			<div onclick="closeContent()" style="display: inline; color: darkgrey; padding: 0px 10px 0px 0px; margin: 10px; text-decoration: underline; cursor: pointer">
				닫기
			</div>
		</div>
		<h4><div class="container-fluid" id="title" style="padding: 0px 20px 10px 20px"></div></h4>
		<div class="container-fluid readability" id="content" style="padding: 10px 20px 20px 20px; margin: 10px 10px 10px 10px"></div>
	</div>

	<!-- tool buttons (back, filter, download) -->
	<div class="btn-group" style="padding: 10px 10px 0px 10px; width: 100%">
		<button type="button" class="btn btn-outline-dark" onclick="movePrevPath()"><i class="fas fa-arrow-left"></i></button>
		<button type="button" class="btn btn-outline-dark" onclick="moveLastNextPath()"><i class="fas fa-arrow-right"></i></button>
		<button type="button" class="btn btn-outline-dark" data-toggle="modal" data-target="#filterModal"><i class="fas fa-calendar-alt"></i></button>
		<button type="button" class="btn btn-outline-dark" onclick="downloadContent()"><i class="fas fa-download"></i></button>
		<input class="rounded-right pathbox" id="pathbox" readonly style="padding-left: 10px; width: 100%; height: 40px">
	</div>

	<!-- filter modal -->
	<div class="modal fade" id="filterModal"><div class="modal-dialog"><div class="modal-content">
		<div class="modal-body jumbotron" style="margin: 10px">
			<label for="startDate"><h5>기간</h5></label>
			<div class="form-inline">
				<input class="form-control mr-sm-2" id="startDate" type="date" value="">
				<input class="form-control mr-sm-2" id="endDate" type="date" value="">
				<button type="button" class="btn" onclick="clearDateFilter()"><i class="fas fa-eraser"></i></button>			
			</div>
		</div>
		<div class="text-center" style="padding: 0px 0px 20px 0px">
			<button type="button" class="btn btn-primary" data-dismiss="modal" onclick="loadNewsList(1)"><i class="fas fa-check"></i>&nbsp;&nbsp;확인</button>
			<button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="fas fa-times"></i>&nbsp;&nbsp;취소</button>
		</div>
	</div></div></div>

	<!-- table container -->
	<div class="container-fluid" id="newsTable" style="display: none; margin: 10px 0px; height: 742px">
		<!-- total -->
		<form class="form-inline">
			<div class="input-group my-1 mr-1">
				<div class="input-group-prepend">
					<span class="input-group-text">총 개수</label>
				</div>
				<span class="form-control" id="newsTotal">0</span>
			</div>
			<div class="input-group my-1 mr-1">
				<div class="input-group-prepend">
					<span class="input-group-text">파일크기</label>
				</div>
				<span class="form-control" id="newsFileSize">0</span>
			</div>
			<div class="input-group my-1 mr-1">
				<div class="input-group-prepend">
					<span class="input-group-text">단어 수</label>
				</div>
				<span class="form-control" id="newsWordCount">0</span>
			</div>
			<div class="input-group my-1">
				<div class="input-group-prepend">
					<span class="input-group-text">문장 수</label>
				</div>
				<span class="form-control" id="newsSentenceCount">0</span>
			</div>
		</form>
		
		<!-- table -->
		<div style="overflow-x: auto">
			<table class="table table-striped" id="list">
				<tr class="table-primary">
					<th>id</th><th>제목</th><th>신문사</th><th>상위 분류</th><th>하위 분류</th><th>날짜</th><th>파일크기</th><th>단어수</th><th>문장수</th><th>파일저장</th>
				</tr>
			</table>
			<div class="container-fluid text-center" id="noData" style="display: none; font-size: 24px; color: darkgray; padding: 10px 20px 20px 20px">
				No Data ...
			</div>
		</div>
		<span class="link" onclick="loadNewsList(1)">첫 페이지</span>
		<!-- '마지막 페이지' 링크는 loadNewsList(...)에서 다시 onclick 콜백함수가 설정된다. -->
		<span class="link" id="go_last_page" onclick="loadNewsList(1)" style="padding: 5px">마지막 페이지</span>
		<div class="btn-group text-center" id="page" style="display: block; padding: 0px 20px 20px 20px"></div>
	</div>

	<!-- folders -->
	<div class="container-fluid" id="divMain" style="padding: 20px; height: 524px; overflow: auto">
	</div>

	<!-- news total table -->
	<div class="container" style="margin: 10px 0px; overflow-x: auto">
		<table class="table table-striped" id="tbNewsTotal" style="display: none"></table>
	</div>

	<footer><% include commons/footer.ejs %></footer>

	<!-- top button -->
	<% include commons/floatingbutton.ejs %>


	<!-- == SCRIPTs ===================================================================== -->
	<% include news/inputform.ejs %> <!-- news filter -->
	<% include commons/util.ejs %> <!-- connection util -->

	<script type="text/javascript">
		/* View */
		//-article content
		const btnCloseContent = document.getElementById("close_content");
		const divTitle = document.getElementById("title");
		const divContent = document.getElementById("content");
		const tbNewsTotal = document.getElementById("tbNewsTotal");
		//-news list
		const newsTable = document.getElementById("newsTable");
		//-folder
		const pathbox = document.getElementById("pathbox");
		const divMain = document.getElementById("divMain");

		/* Data */
		const ROOT_PATH = 'NEWS';
		let currentPath = ROOT_PATH;
		let lastNextName = []; //앞으로 갈 때 이동할 필터명
		let selectedItems = []; //선택된 폴더 OR 뉴스 (다운로드 리스트)
		let newsArgs = {"newsName": "", "newsCategory": "", "newsDivision": ""}; //현재 경로 내용

		/* execute */
		document.getElementById("nav-corpus").classList.add('active');
		pathbox.value = currentPath;
		initNewsTotalTable(true);
		showFolders();

		/* View Control */
		function clearDateFilter() {
			inputform_startDate.value = "";
			inputform_endDate.value = "";
		}

		function showhideRightSideBox(shown) { //뉴스 내용 창을 보여주거나 숨긴다.
			document.getElementById("divArticle").style.width = (shown) ? '80%' : '0';
		}

		function showFolders() { //하위 폴더를 보여준다. (성공 true, 실패 false -> 실패한 경우 Caller는 폴더 대신 뉴스기사 목록을 보여줘야 한다.)
			let svgHtml = '';

			selectedItems.length = 0; //선택 목록 초기화 (clear list)
			let sublistNames = getSubListNames();
			if (!sublistNames || sublistNames.length == 0) {
				return false;
			}

			// 폴더 그리기
			sublistNames.forEach(name => {
				const firstLetter = name[0].toUpperCase();
				svgHtml += `
<button class="btn folder" onclick="selectItem(this, '${name}')" ondblclick="moveNextPath('${name}')">
	<svg height="50" width="50">
		<polygon points="0,0 20,0 25,5 50,5 50,50 0,50" fill="antiquewhite" />
		<text x="25" y="42" font-size="45" fill="coral" text-anchor="middle">${firstLetter}</text>
	</svg>
	<div class="folder-name" id="folder_${name}">
		${name}
		<span class="spinner-border spinner-border-sm" id="spinner_${name}"></span>
	</div>
</button>
				`;
			});
			divMain.style.display = 'block';
			divMain.innerHTML = svgHtml;

			loadFolders(sublistNames); //각 폴더이름 옆에 기사개수 로드

			return true;
		}

		function selectItem(v, name) {
			v.style.backgroundColor = 'lightsalmon';
			v.onclick = (e) => {
				unselectItem(v, name);
			}
			selectedItems.push(name);
		}

		function unselectItem(v, name) {
			v.style.backgroundColor = null;
			v.onclick = (e) => {
				selectItem(v, name);
			}
			let delIdx = selectedItems.indexOf(name);
			selectedItems.splice(delIdx, 1);
		}

		function movePrevPath() {
			if (currentPath == ROOT_PATH) return;
			newsTable.style.display = 'none';
			const lastSlashIdx = currentPath.lastIndexOf('/');
			lastNextName.push(currentPath.substr(lastSlashIdx + 1, currentPath.length - lastSlashIdx - 1));
			currentPath = currentPath.substr(0, lastSlashIdx);
			pathbox.value = currentPath;
			if (!showFolders())
				loadNewsList(1);
		}

		function moveNextPath(name) {
			if (name)
				lastNextName = [];
			else
				name = lastNextName.pop();
			currentPath += ('/' + name);
			pathbox.value = currentPath;
			if (!showFolders())
				loadNewsList(1);
		}

		function moveLastNextPath() {
			if (lastNextName.length > 0)
				moveNextPath();
		}

		function getSubListNames() { //현재 경로의 하위 목록을 반환한다.
			newsArgs = {"newsName": "", "newsCategory": "", "newsDivision": ""};

			let sublist = null;
			if (currentPath == ROOT_PATH) {
				sublist = Object.keys(newsNames);
			} else {
				const pathNames = currentPath.split('/');
				if (pathNames.length == 2) { //category
					sublist = categories[pathNames[1]];
					newsArgs['newsName'] = pathNames[1];
				} else if (pathNames.length == 3) { //division
					sublist = divisions[pathNames[1]][pathNames[2]];
					newsArgs['newsName'] = pathNames[1];
					newsArgs['newsCategory'] = pathNames[2];
				} else {
					newsArgs['newsName'] = pathNames[1];
					newsArgs['newsCategory'] = pathNames[2];
					newsArgs['newsDivision'] = pathNames[3];
				}
			}

			return sublist;
		}

		function initNewsTotalTable(show) {
			tbNewsTotal.innerHTML = `
				<tr class="table-primary">
					<th>신문사/분류</th><th>뉴스개수</th><th>파일크기</th><th>단어수</th><th>문장수</th>
				</tr>`;
			tbNewsTotal.style.display = show ? 'block' : 'none';
		}

		/* Http Server */
		function loadFolders(folderList) { //각 폴더이름 옆에 기사개수 로드
			let newsName = newsArgs["newsName"];
			let newsCategory = newsArgs["newsCategory"];
			let newsDivision = newsArgs["newsDivision"];

			let suffix = "";
			let suffixKey = "";
			if (newsName != "") {
				suffix += `?newsName=${newsName}`;
				if (newsCategory != "") {
					suffix += `&newsCategory=${newsCategory}`;
					if (newsDivision != "") {
						suffix += `&newsDivision=${newsDivision}`;
					} else {
						suffixKey = "&newsDivision=";
					}
				} else {
					suffixKey = "&newsCategory=";
				}
			} else {
				suffixKey = "?newsName=";
			}

			initNewsTotalTable(true);

			folderList.forEach(val => {
				let dest = `newscorpus/count${suffix}${suffixKey}${val}`;
				connect("GET", dest, null, null, function(readyState, status, response) {
					if (readyState != 4) return;
					let spinner = document.getElementById(`spinner_${val}`);
					if (spinner != undefined)
						spinner.style.display = 'none';
					if (status != 200) return;

					let result = JSON.parse(response);
					let count = result.count;

					let divFolder = document.getElementById(`folder_${val}`);
					divFolder.innerText = `${val} (${count})`;

					let tr = document.createElement("TR");
					let tdName = document.createElement("TD");
					let tdNewsCount = document.createElement("TD");
					let tdFileSize = document.createElement("TD");
					let tdWordCount = document.createElement("TD");
					let tdSentenceCount = document.createElement("TD");

					tdName.innerText = val;
					tdNewsCount.innerText = numberWithCommas(count) + " 개";
					tdFileSize.innerText = numberWithCommas(Math.round(result.fs / 1024 * 10) / 10) + " KB";
					tdWordCount.innerText = numberWithCommas(result.wc) + " 개";
					tdSentenceCount.innerText = numberWithCommas(result.sc) + " 개";

					tr.appendChild(tdName);
					tr.appendChild(tdNewsCount);
					tr.appendChild(tdFileSize);
					tr.appendChild(tdWordCount);
					tr.appendChild(tdSentenceCount);
					tbNewsTotal.appendChild(tr);
				});
			});
		}

		function loadNewsList(page) { //페이지의 뉴스 목록을 가져온다.
			divMain.style.display = 'none';
			newsTable.style.display = 'block';
			initNewsTotalTable(false);

			if (page < 1) page = 1;
			const size = 10; //행 최대개수
			let newsName = "", newsCategory = "", newsDivision = "", startDate = "", endDate = "";
			newsName = newsArgs["newsName"];
			newsCategory = newsArgs["newsCategory"];
			newsDivision = newsArgs["newsDivision"];
			startDate = inputform_startDate.value;
			endDate = inputform_endDate.value;

			/* Load news count */
			let dest = `newscorpus/count?newsName=${newsName}&newsCategory=${newsCategory}&newsDivision=${newsDivision}&startDate=${startDate}&endDate=${endDate}`;
			connect("GET", dest, null, null, function(readyState, status, response) {
				if (readyState != 4 || status != 200) return;
				let result = JSON.parse(response);
				let count = result.count;

				const spanNewsTotal = document.getElementById("newsTotal");
				spanNewsTotal.innerText = numberWithCommas(count) + " 개";
				const spanNewsFileSize = document.getElementById("newsFileSize");
				spanNewsFileSize.innerText = numberWithCommas(Math.round(result.fs / 1024 * 10) / 10) + " KB";
				const spanNewsWordCount = document.getElementById("newsWordCount");
				spanNewsWordCount.innerText = numberWithCommas(result.wc) + " 개";
				const spanNewsSentenceCount = document.getElementById("newsSentenceCount");
				spanNewsSentenceCount.innerText = numberWithCommas(result.sc) + " 개";

				const spanGoLastPage = document.getElementById("go_last_page");
				spanGoLastPage.onclick = function(e) {
					loadNewsList(Math.ceil(count / size));
				};
				const btnGroup = document.getElementById("page");
				while (btnGroup.firstChild)
					btnGroup.removeChild(btnGroup.firstChild);
				var s = page - 4;
				if (s < 1) s = 1;
				var e = s + size;
				if (e > count / size + 1) e = count / size + 1;
				for (let i = s; i < e; i++) {
					/* Bind */
					var btn;
					btn = document.createElement("BUTTON");
					/* Set btn */
					btn.innerText = i;
					btn.style.width = '45px';
					btn.style.fontSize = '0.8em';
					btn.onclick = function(e) {
						loadNewsList(i);
					};
					btn.className = (i==page)? 'btn btn-secondary' : 'btn btn-outline-secondary';
					/* Append */
					btnGroup.appendChild(btn);
				}

				/* Load news list */
				const table = document.getElementById("list");
				//id  url  newspaper  category  division  date  title text
				while (table.childElementCount > 1)
					table.removeChild(table.lastChild);

				if (count == 0) {
					document.getElementById("noData").style.display = 'block';
					return;
				} else {
					document.getElementById("noData").style.display = 'none';
				}

				const dest = `newscorpus/list?page=${page}&size=${size}&newsName=${newsName}&newsCategory=${newsCategory}&newsDivision=${newsDivision}&startDate=${startDate}&endDate=${endDate}`;
				connect("GET", dest, null, null, function(readyState, status, response) {
					if (readyState != 4 || status != 200) return;

					let rows = JSON.parse(response);
					for (let i = 0; i < rows.length; i++) {
						/* Bind */
						let tr = document.createElement("TR");
						let tdId = document.createElement("TD");
						let tdTit = document.createElement("TD");
						let aTitUrl = document.createElement("A");
						let tdNp = document.createElement("TD");
						let tdCat = document.createElement("TD");
						let tdDiv = document.createElement("TD");
						let tdDat = document.createElement("TD");
						let tdSize = document.createElement("TD");
						let tdWc = document.createElement("TD");
						let tdSc = document.createElement("TD");
						let tdTxt = document.createElement("TD");
						let aTxtUrl = document.createElement("A");
						let iTxtIcon = document.createElement("I");

						/* Set row */
						let row = rows[i];
						tdId.innerText = row.id;
						aTitUrl.innerText = row.title;
						aTitUrl.href = row.url;
						tdNp.innerText = row.newspaper;
						tdCat.innerText = row.category;
						tdDiv.innerText = row.division;
						tdDat.innerText = row.date;
						tdSize.innerText = `${row.textsize} B`;
						tdWc.innerText = row.textwc;
						tdSc.innerText = row.textsc;
						if (row.texturl != "")
							aTxtUrl.href = row.texturl;
						aTxtUrl.download = `${row.date}-${row.title}.txt`;
						iTxtIcon.className = 'far fa-file-alt';
						iTxtIcon.style = 'font-size:24px';

						tr.onclick = function(e) {
							selectItem(tr, row.id);
						};

						tr.ondblclick = function(e) {
							closeContent();
							if (row.texturl != "") {
								loadContent(row.title, row.texturl);
							}
						};

						/* Append */
						tr.appendChild(tdId);
						tdTit.appendChild(aTitUrl);
						tr.appendChild(tdTit);
						tr.appendChild(tdNp);
						tr.appendChild(tdCat);
						tr.appendChild(tdDiv);
						tr.appendChild(tdDat);
						tr.appendChild(tdSize);
						tr.appendChild(tdWc);
						tr.appendChild(tdSc);
						aTxtUrl.appendChild(iTxtIcon);
						tdTxt.appendChild(aTxtUrl);
						tr.appendChild(tdTxt);
						table.appendChild(tr);
					}
				}); //load news list
			}); //load news count
		}

		function loadContent(title, texturl) { //뉴스 내용을 가져온다.
			showhideRightSideBox(true);

			/* Get news text */
			connect("GET", texturl, null, null, function(readyState, status, response) {
					if (readyState != 4 || status != 200) return;

					/* Set text */
					let text = response;
					btnCloseContent.style.display = 'block';
					divTitle.innerText = title;
					divContent.innerText = text;
				});
		}

		function closeContent() { //뉴스 내용 창을 닫는다.
			showhideRightSideBox(false);
			btnCloseContent.style.display = 'none';
			while (divTitle.firstChild)
				divTitle.removeChild(divTitle.firstChild);
			while (divContent.firstChild)
				divContent.removeChild(divContent.firstChild);
		}

		function downloadContent() {
			let newsName = newsArgs["newsName"];
			let newsCategory = newsArgs["newsCategory"];
			let newsDivision = newsArgs["newsDivision"];
			let startDate = inputform_startDate.value;
			let endDate = inputform_endDate.value;

			/* Download news contents */
			let dest = `newscorpus/download?newsName=${newsName}&newsCategory=${newsCategory}&newsDivision=${newsDivision}&startDate=${startDate}&endDate=${endDate}`;

			let headers = [
				{'name': 'Content-Type', 'value': 'application/json'}
			];

			let body = null;
			let currentKey = null; //선택한 항목 종류 (제목or분류1or분류2or뉴스이름)
			if (categories[newsName] != undefined && categories[newsName].length == 0) { //newsName 있으면
				currentKey = "newsName";
			} else if (divisions[newsName][newsCategory] == undefined) { //newsCategory 있으면
				currentKey = "newsCategory";
			} else if (divisions[newsName][newsCategory].length != 0 && newsDivision == "") { //newsDivision 목록이 더 있으면
				currentKey = "newsDivision";
			} else { //newsDivision 목록이 없으면 newsId (Ex. reuters)
				currentKey = "newsId";
			}
			if (selectedItems.length != 0)
				body = `{"key": "${currentKey}", "selectedItems": ["${selectedItems.join('", "')}"]}`;

			connect("POST", dest, headers, body, function(readyState, status, response) {
				if (readyState != 4) return;
				if (status == 203) {
					alert('내려받을 항목을 선택해주세요.');
					return;
				}
				if (status != 200) return;

				let url = response;
				window.open(url, '_blank');
			});
		}

	</script>

</body>
</html>
