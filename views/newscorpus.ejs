<!DOCTYPE html>
<html>
<head><% include commons/head.ejs %></head>

<body>

	<header><% include commons/header.ejs %></header>

	<!-- news article content -->
	<div class="rounded right-sidebox" id="divArticle" style="z-index: 9">
		<div class="text-right" id="close_content" style="display: none">
			<div onclick="closeContent()" style="display: inline; color: darkgrey; padding: 0px 10px 0px 0px; margin: 10px; text-decoration: underline; cursor: pointer">
				닫기
			</div>
		</div>
		<h4><div class="container-fluid" id="title" style="padding: 0px 20px 10px 20px"></div></h4>
		<div class="container-fluid readability" id="content" style="padding: 10px 20px 20px 20px; margin: 10px 10px 10px 10px"></div>
	</div>

	<!-- tool buttons (back, filter, download) -->
	<div class="btn-group" style="padding: 10px 10px 0px 10px; width: 100%">
		<button type="button" class="btn btn-outline-dark" onclick="back()"><i class="fas fa-arrow-left"></i></button>
		<button type="button" class="btn btn-outline-dark" onclick="moveLastNextPath()"><i class="fas fa-arrow-right"></i></button>
		<button type="button" class="btn btn-outline-dark" data-toggle="modal" data-target="#filterModal"><i class="fas fa-calendar-alt"></i></button>
		<button type="button" class="btn btn-outline-dark" onclick="downloadContent()"><i class="fas fa-download"></i></button>
		<input class="rounded-right pathbox" id="pathbox" readonly style="padding-left: 10px; width: 100%; height: 40px">
	</div>

	<!-- filter modal -->
	<div class="modal fade" id="filterModal"><div class="modal-dialog"><div class="modal-content">
		<div class="modal-body jumbotron" style="margin: 10px">
			<label for="startDate"><h5>기간</h5></label>
			<div class="form-inline">
				<input class="form-control mr-sm-2" id="startDate" type="date" value="">
				<input class="form-control mr-sm-2" id="endDate" type="date" value="">
				<button type="button" class="btn" onclick="clearFilter()"><i class="fas fa-eraser"></i></button>			
			</div>
		</div>
		<div class="text-center" style="padding: 0px 0px 20px 0px">
			<button type="button" class="btn btn-primary" data-dismiss="modal" onclick="loadNewsList(1)"><i class="fas fa-check"></i>&nbsp;&nbsp;확인</button>
			<button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="fas fa-times"></i>&nbsp;&nbsp;취소</button>
		</div>
	</div></div></div>

	
	<!-- table -->
	<div class="container-fluid" id="newsTable" style="display: none; margin: 10px 0px; height: 742px">
		<div id="n_list"></div>
		<div style="overflow-x: auto">
			<table class="table table-striped" id="list">
				<tr class="table-primary">
					<th>id</th><th>제목</th><th>신문사</th><th>상위 분류</th><th>하위 분류</th><th>날짜</th><th>파일크기</th><th>단어수</th><th>문장수</th><th>파일저장</th>
				</tr>
			</table>
			<div class="container-fluid text-center" id="noData" style="display: none; font-size: 24px; color: darkgray; padding: 10px 20px 20px 20px">
				No Data ...
			</div>
		</div>
		<span class="link" onclick="loadNewsList(1)">첫 페이지</span>
		<!-- '마지막 페이지' 링크는 loadNewsList(...)에서 다시 onclick 콜백함수가 설정된다. -->
		<span class="link" id="go_last_page" onclick="loadNewsList(1)" style="padding: 5px">마지막 페이지</span>
		<div class="btn-group text-center" id="page" style="display: block; padding: 0px 20px 20px 20px"></div>
	</div>

	<!-- folders -->
	<div class="container-fluid" id="divMain" style="padding: 20px; height: 762px">
	</div>

	<footer><% include commons/footer.ejs %></footer>

	<!-- top button -->
	<% include commons/floatingbutton.ejs %>


	<!-- == SCRIPTs ===================================================================== -->
	<% include news/inputform.ejs %> <!-- news filter -->
	<% include commons/util.ejs %> <!-- connection util -->

	<script type="text/javascript">
		/* View */
		//-article content
		const btnCloseContent = document.getElementById("close_content");
		const divTitle = document.getElementById("title");
		const divContent = document.getElementById("content");
		//-news list
		const newsTable = document.getElementById("newsTable");
		//-folder
		const pathbox = document.getElementById("pathbox");
		const divMain = document.getElementById("divMain");

		/* Data */
		const ROOT_PATH = 'NEWS';
		let currentPath = ROOT_PATH;
		let newsArgs = {"newsName": "", "newsCategory": "", "newsDivision": ""};
		let lastNextName = []; //앞으로 갈 때 이동할 필터명

		/* execute */
		document.getElementById("nav-corpus").classList.add('active');
		pathbox.value = currentPath;
		showFolders();

		/* View Control */
		function back() {
			newsTable.style.display = 'none';
			movePrevPath();
			showFolders();
		}

		function clearFilter() {
			inputform_startDate.value = "";
			inputform_endDate.value = "";
		}

		function showhideRightSideBox(shown) {
			document.getElementById("divArticle").style.width = (shown) ? '80%' : '0';
		}

		function showFolders() {
			let svgHtml = '';
			let list = null;
			if (currentPath == ROOT_PATH) {
				list = Object.keys(newsNames);
			} else {
				const pathNames = currentPath.split('/');
				newsArgs = {"newsName": "", "newsCategory": "", "newsDivision": ""};
				if (pathNames.length == 2) { //category
					list = categories[pathNames[1]];
					newsArgs['newsName'] = pathNames[1];
				} else if (pathNames.length == 3) { //division
					list = divisions[pathNames[1]][pathNames[2]];
					newsArgs['newsCategory'] = pathNames[2];
				} else {
					newsArgs['newsDivision'] = pathNames[3];
				}
			}

			if (!list || list.length == 0) {
				loadNewsList(1);
				return;
			}

			list.forEach(val => {
				const firstLet = val[0].toUpperCase();
				svgHtml += `
<button class="btn folder" onclick="moveNextPath('${val}')">
	<svg height="100" width="100">
		<polygon points="0,0 40,0 50,10 100,10 100,100 0,100" fill="antiquewhite" />
		<text x="50" y="85" font-size="90" fill="coral" text-anchor="middle">${firstLet}</text>
	</svg>
	<div class="folder-name">${val}</div>
</button>
				`;
			});
			divMain.style.display = 'block';
			divMain.innerHTML = svgHtml;
		}

		function movePrevPath() {
			if (currentPath == ROOT_PATH) return;
			const lastSlashIdx = currentPath.lastIndexOf('/');
			lastNextName.push(currentPath.substr(lastSlashIdx + 1, currentPath.length - lastSlashIdx - 1));
			currentPath = currentPath.substr(0, lastSlashIdx);
			pathbox.value = currentPath;
			showFolders();
		}

		function moveNextPath(name) {
			if (name)
				lastNextName = [];
			else
				name = lastNextName.pop();
			currentPath += ('/' + name);
			pathbox.value = currentPath;
			showFolders();
		}

		function moveLastNextPath() {
			if (lastNextName.length > 0)
				moveNextPath();
		}

		/* Http Server */
		function loadNewsList(page) { //페이지의 뉴스 목록을 가져온다.
			divMain.style.display = 'none';
			newsTable.style.display = 'block';

			if (page < 1) page = 1;
			const size = 10; //행 최대개수
			let newsName = "", newsCategory = "", newsDivision = "", startDate = "", endDate = "";
			newsName = newsArgs["newsName"];
			newsCategory = newsArgs["newsCategory"];
			newsDivision = newsArgs["newsDivision"];
			startDate = inputform_startDate.value;
			endDate = inputform_endDate.value;

			/* Get news count */
			let dest = `newscorpus/count?newsName=${newsName}&newsCategory=${newsCategory}&newsDivision=${newsDivision}&startDate=${startDate}&endDate=${endDate}`;
			connect("GET", dest, null, null, function(readyState, status, response) {
				if (readyState != 4 || status != 200) return;
				let count = response;
				const divNlist = document.getElementById("n_list");
				divNlist.innerText = `총 ${count} 개`;
				const spanGoLastPage = document.getElementById("go_last_page");
				spanGoLastPage.onclick = function(e) {
					loadNewsList(Math.ceil(count / size));
				};
				const btnGroup = document.getElementById("page");
				while (btnGroup.firstChild)
					btnGroup.removeChild(btnGroup.firstChild);
				var s = page - 4;
				if (s < 1) s = 1;
				var e = s + size;
				if (e > count / size + 1) e = count / size + 1;
				for (let i = s; i < e; i++) {
					/* Bind */
					var btn;
					btn = document.createElement("BUTTON");
					/* Set btn */
					btn.innerText = i;
					btn.style.width = '45px';
					btn.style.fontSize = '0.8em';
					btn.onclick = function(e) {
						loadNewsList(i);
					};
					btn.className = (i==page)? 'btn btn-secondary' : 'btn btn-outline-secondary';
					/* Append */
					btnGroup.appendChild(btn);
				}

				/* Get news list */
				const table = document.getElementById("list");
				//id  url  newspaper  category  division  date  title text
				while (table.childElementCount > 1)
					table.removeChild(table.lastChild);
				
				if (count == 0) {
					document.getElementById("noData").style.display = 'block';
					return;
				} else {
					document.getElementById("noData").style.display = 'none';
				}

				const dest = `newscorpus/list?page=${page}&size=${size}&newsName=${newsName}&newsCategory=${newsCategory}&newsDivision=${newsDivision}&startDate=${startDate}&endDate=${endDate}`;
				connect("GET", dest, null, null, function(readyState, status, response) {
					if (readyState != 4 || status != 200) return;

					let rows = JSON.parse(response);
					for (let i = 0; i < rows.length; i++) {
						/* Bind */
						let tr = document.createElement("TR");
						let tdId = document.createElement("TD");
						let tdTit = document.createElement("TD");
						let aTitUrl = document.createElement("A");
						let tdNp = document.createElement("TD");
						let tdCat = document.createElement("TD");
						let tdDiv = document.createElement("TD");
						let tdDat = document.createElement("TD");
						let tdSize = document.createElement("TD");
						let tdWc = document.createElement("TD");
						let tdSc = document.createElement("TD");
						let tdTxt = document.createElement("TD");
						let aTxtUrl = document.createElement("A");
						let iTxtIcon = document.createElement("I");

						/* Set row */
						let row = rows[i];
						tdId.innerText = row.id;
						aTitUrl.innerText = row.title;
						aTitUrl.href = row.url;
						tdNp.innerText = row.newspaper;
						tdCat.innerText = row.category;
						tdDiv.innerText = row.division;
						tdDat.innerText = row.date;
						tdSize.innerText = `${row.textsize} B`;
						tdWc.innerText = row.textwc;
						tdSc.innerText = row.textsc;
						if (row.texturl != "")
							aTxtUrl.href = row.texturl;
						aTxtUrl.download = `${row.date}-${row.title}.txt`;
						iTxtIcon.className = 'far fa-file-alt';
						iTxtIcon.style = 'font-size:24px';

						tr.onclick = function(e) {
							closeContent();
							if (row.texturl != "") {
								loadContent(row.title, row.texturl);
							}
						};
						
						tr.onmouseover = function(e) {
								tr.style.backgroundColor = 'DodgerBlue';
								tr.style.color = 'White';
								aTitUrl.style.color = 'White';
								aTxtUrl.style.color = 'White';
							};
						tr.onmouseout = function(e) {
								tr.style.backgroundColor = 'White';
								tr.style.color = '';
								aTitUrl.style.color = '';
								aTxtUrl.style.color = '';
							};

						/* Append */
						tr.appendChild(tdId);
						tdTit.appendChild(aTitUrl);
						tr.appendChild(tdTit);
						tr.appendChild(tdNp);
						tr.appendChild(tdCat);
						tr.appendChild(tdDiv);
						tr.appendChild(tdDat);
						tr.appendChild(tdSize);
						tr.appendChild(tdWc);
						tr.appendChild(tdSc);
						aTxtUrl.appendChild(iTxtIcon);
						tdTxt.appendChild(aTxtUrl);
						tr.appendChild(tdTxt);
						table.appendChild(tr);
					}
				}); //get news list
			}); //get news count
		}

		function loadContent(title, texturl) { //뉴스 내용을 가져온다.
			showhideRightSideBox(true);

			/* Get news text */
			connect("GET", texturl, null, null, function(readyState, status, response) {
					if (readyState != 4 || status != 200) return;

					/* Set text */
					let text = response;
					btnCloseContent.style.display = 'block';
					divTitle.innerText = title;
					divContent.innerText = text;
				});
		}

		function closeContent() {
			showhideRightSideBox(false);
			btnCloseContent.style.display = 'none';
			while (divTitle.firstChild)
				divTitle.removeChild(divTitle.firstChild);
			while (divContent.firstChild)
				divContent.removeChild(divContent.firstChild);
		}

		function downloadContent() {
			let newsName = "", newsCategory = "", newsDivision = "", startDate = "", endDate = "";
			newsName = newsArgs["newsName"];
			newsCategory = newsArgs["newsCategory"];
			newsDivision = newsArgs["newsDivision"];
			startDate = inputform_startDate.value;
			endDate = inputform_endDate.value;

			/* Download news contents */
			let dest = `newscorpus/download?newsName=${newsName}&newsCategory=${newsCategory}&newsDivision=${newsDivision}&startDate=${startDate}&endDate=${endDate}`;
			connect("GET", dest, null, null, function(readyState, status, response) {
				if (readyState != 4 || status != 200) return;
				let url = response;
				window.open(url, '_blank');
			});
		}

	</script>

</body>
</html>
